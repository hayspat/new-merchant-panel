/**
 * This file was auto-generated by swagger-to-ts.
 * Do not make direct changes to the file.
 */

export interface components {
  schemas: {
    UpdateUserRequestDTO: {
      name?: string | null;
      surname?: string | null;
      email?: string | null;
      phoneNumber?: string | null;
    };
    UpdateUserResponseDTO: { [key: string]: any };
    OperationResultMessage: { code?: string | null; message?: string | null };
    UpdateUserResponseDTOOperationResultDTO: {
      response?: components["schemas"]["UpdateUserResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    StatusType: "0" | "1";
    InsertUserAddressRequestDTO: {
      description?: string | null;
      countryId?: number;
      cityId?: number;
      districtId?: number;
      neighborhood?: string | null;
      street?: string | null;
      building?: string | null;
      department?: string | null;
      fullAddress?: string | null;
      contactTitle?: string | null;
      longitude?: number;
      latitude?: number;
      addressType?: number;
      isCurrent?: boolean;
      status?: components["schemas"]["StatusType"];
    };
    InsertUserAddressResponseDTO: {
      id?: number;
      description?: string | null;
      countryId?: number;
      cityId?: number;
      districtId?: number;
      neighborhood?: string | null;
      street?: string | null;
      building?: string | null;
      department?: string | null;
      fullAddress?: string | null;
      contactTitle?: string | null;
      longitude?: number;
      latitude?: number;
      addressType?: number;
      isDeleted?: boolean;
      isCurrent?: boolean;
      creatorUserId?: number;
      creationTime?: string;
    };
    InsertUserAddressResponseDTOOperationResultDTO: {
      response?: components["schemas"]["InsertUserAddressResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    UpdateUserAddressRequestDTO: {
      addressId?: number;
      description?: string | null;
      countryId?: number;
      cityId?: number;
      districtId?: number;
      neighborhood?: string | null;
      street?: string | null;
      building?: string | null;
      department?: string | null;
      isCurrent?: boolean;
      fullAddress?: string | null;
      contactTitle?: string | null;
      longitude?: number;
      latitude?: number;
      status?: components["schemas"]["StatusType"];
      addressType?: number;
    };
    UpdateUserAddressResponseDTO: {
      addressId?: number;
      name?: string | null;
      description?: string | null;
      countryId?: number;
      cityId?: number;
      districtId?: number;
      neighborhood?: string | null;
      street?: string | null;
      building?: string | null;
      department?: string | null;
      isCurrent?: boolean;
      fullAddress?: string | null;
      contactTitle?: string | null;
      longitude?: number;
      latitude?: number;
      addressType?: number;
    };
    UpdateUserAddressResponseDTOOperationResultDTO: {
      response?: components["schemas"]["UpdateUserAddressResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    RegisterUserRequestDTO: {
      phoneNumber?: string | null;
      name?: string | null;
      surname?: string | null;
      email?: string | null;
      password?: string | null;
    };
    RegisterUserResponseDTO: {
      id?: number;
      username?: string | null;
      name?: string | null;
      surname?: string | null;
      email?: string | null;
      creatorUserId?: number;
      modifierUserId?: number | null;
      creationTime?: string;
      lastModTime?: string | null;
      isDeleted?: boolean;
    };
    RegisterUserResponseDTOOperationResultDTO: {
      response?: components["schemas"]["RegisterUserResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetUserDetailsResponseDTO: {
      id?: number;
      username?: string | null;
      name?: string | null;
      surname?: string | null;
      email?: string | null;
      merchantBranchId?: number | null;
      phoneNumber?: string | null;
    };
    GetUserDetailsResponseDTOOperationResultDTO: {
      response?: components["schemas"]["GetUserDetailsResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    UserAddressItemResponseDTO: {
      id?: number;
      description?: string | null;
      countryId?: number;
      cityId?: number;
      districtId?: number;
      neighborhood?: string | null;
      street?: string | null;
      building?: string | null;
      department?: string | null;
      fullAddress?: string | null;
      contactTitle?: string | null;
      longitude?: string | null;
      latitude?: string | null;
      addressType?: number;
      isCurrent?: boolean;
      creatorUserId?: number;
      creationTime?: string;
    };
    UserAddressItemResponseDTOOperationResultDTO: {
      response?: components["schemas"]["UserAddressItemResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    DeleteUserRequestDTO: { id?: number };
    ValidateUserRequestDTO: {
      username?: string | null;
      password?: string | null;
      userTypeId?: number;
    };
    ValidateUserResponseDTO: {
      username?: string | null;
      name?: string | null;
      surname?: string | null;
      email?: string | null;
      phoneNumber?: string | null;
      merchantBranchId?: number | null;
      token?: string | null;
      refreshToken?: string | null;
      tokenExpireDate?: string;
    };
    ValidateUserResponseDTOOperationResultDTO: {
      response?: components["schemas"]["ValidateUserResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    CreateForgetPasswordRequestDTO: { phoneNumber?: string | null };
    OperationResultDTO: {
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    ValidateForgetPasswordRequestDTO: {
      code?: string | null;
      phoneNumber?: string | null;
    };
    ChangeForgetPasswordRequestDTO: {
      code?: string | null;
      phoneNumber?: string | null;
      password?: string | null;
      confirmPassword?: string | null;
    };
    UpdatePasswordRequest: {
      password?: string | null;
      newPassword?: string | null;
      reTypeNewPassword?: string | null;
    };
    InsertBasketItemDTO: {
      productId?: number;
      productItemId?: number;
      quantity?: number;
    };
    InsertBasketItemRequestDTO: {
      addressId?: number;
      basketItem?: components["schemas"]["InsertBasketItemDTO"] | null;
    };
    BasketItemListDTO: {
      productId?: number;
      productItemId?: number;
      productName?: string | null;
      productImage?: string | null;
      price?: number;
      quantity?: number;
      stockStatus?: boolean;
      stockStatusMessage?: string | null;
    };
    BasketInfoDTO: {
      userId?: number;
      items?: components["schemas"]["BasketItemListDTO"][] | null;
      amount?: number;
      discount?: number;
      isMinAmount?: boolean;
      freeCargo?: boolean;
      freeCargoLimit?: number;
      statusMessage?: string | null;
    };
    BasketInfoDTOOperationResultDTO: {
      response?: components["schemas"]["BasketInfoDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    RemoveBasketItemDTO: {
      addressId?: number;
      productId?: number;
      productItemId?: number;
    };
    StringOperationResultDTO: {
      response?: string | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    InsertCarrierRequestDTO: {
      merchantId?: number;
      phoneNumber?: string | null;
      name?: string | null;
      surname?: string | null;
      email?: string | null;
      password?: string | null;
      carrierType?: number;
    };
    InsertCarrierResponseDTO: { [key: string]: any };
    InsertCarrierResponseDTOOperationResultDTO: {
      response?: components["schemas"]["InsertCarrierResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    UpdateCarrierRequestDTO: {
      carrierId?: number;
      merchantId?: number;
      phoneNumber?: string | null;
      name?: string | null;
      surname?: string | null;
      email?: string | null;
      carrierType?: number;
    };
    UpdateCarrierResponseDTO: { [key: string]: any };
    UpdateCarrierResponseDTOOperationResultDTO: {
      response?: components["schemas"]["UpdateCarrierResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetCarrierResponseDTO: {
      userId?: number;
      fullName?: string | null;
      carrierType?: number;
      merchantId?: number;
    };
    GetCarrierResponseDTOOperationResultDTO: {
      response?: components["schemas"]["GetCarrierResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetCarrierListRequestDTO: {
      pageIndex?: number;
      pageSize?: number;
      orderBy?: string | null;
      orderDir?: string | null;
    };
    GetCarrierResponseDTOPagingOperationResultDTO: {
      totalCount?: number;
      pageIndex?: number;
      pageSize?: number;
      pageCount?: number;
      response?: components["schemas"]["GetCarrierResponseDTO"][] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    SearchCarrierRequestDTO: {
      fullName?: string | null;
      pageIndex?: number;
      pageSize?: number;
      orderBy?: string | null;
      orderDir?: string | null;
    };
    InsertOrderDeliveryCodeRequestDTO: { orderId?: number; carrierId?: number };
    InsertOrderDeliveryCodeResponseDTO: { [key: string]: any };
    InsertOrderDeliveryCodeResponseDTOOperationResultDTO: {
      response?:
        | components["schemas"]["InsertOrderDeliveryCodeResponseDTO"]
        | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    UpdateCarrierTrackingInfoRequestDTO: {
      carrierTrackingInfoId?: number;
      carrierId?: number;
      longitude?: number;
      latitude?: number;
      isMoving?: boolean;
    };
    UpdateCarrierTrackingInfoResponseDTO: {
      id?: number;
      orderId?: number;
      carrierId?: number;
      longitude?: number;
      latitude?: number;
      isMoving?: boolean;
    };
    UpdateCarrierTrackingInfoResponseDTOOperationResultDTO: {
      response?:
        | components["schemas"]["UpdateCarrierTrackingInfoResponseDTO"]
        | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetCarrierTrackingInfoRequestDTO: { carrierTrackingInfoId?: number };
    GetCarrierTrackingInfoResponseDTO: {
      id?: number;
      orderId?: number;
      carrierId?: number;
      longitude?: number;
      latitude?: number;
      isMoving?: boolean;
    };
    GetCarrierTrackingInfoResponseDTOOperationResultDTO: {
      response?:
        | components["schemas"]["GetCarrierTrackingInfoResponseDTO"]
        | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    InsertCarrierTrackingInfoResponseDTO: {
      id?: number;
      orderId?: number;
      carrierId?: number;
      longitude?: number;
      latitude?: number;
      isMoving?: boolean;
    };
    InsertCarrierTrackingInfoResponseDTOOperationResultDTO: {
      response?:
        | components["schemas"]["InsertCarrierTrackingInfoResponseDTO"]
        | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    InsertCampaignRequestDTO: {
      title?: string | null;
      merchantBranchId?: number;
      subTitle?: string | null;
      description?: string | null;
      imageUrl?: string | null;
      order?: number;
    };
    CampaignResponseDTO: {
      id?: number;
      title?: string | null;
      subTitle?: string | null;
      description?: string | null;
      imageUrl?: string | null;
      order?: number;
    };
    CampaignResponseDTOOperationResultDTO: {
      response?: components["schemas"]["CampaignResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    UpdateCampaignRequestDTO: {
      campaignId?: number;
      title?: string | null;
      subTitle?: string | null;
      description?: string | null;
      imageUrl?: string | null;
      order?: number;
    };
    GetCampaignsRequestDTO: { merchantBranchId?: number };
    CampaignResponseDTOPagingOperationResultDTO: {
      totalCount?: number;
      pageIndex?: number;
      pageSize?: number;
      pageCount?: number;
      response?: components["schemas"]["CampaignResponseDTO"][] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    SearchCampaignsRequestDTO: {
      title?: string | null;
      pageIndex?: number;
      pageSize?: number;
      orderBy?: string | null;
      orderDir?: string | null;
    };
    InsertSliderRequestDTO: {
      title?: string | null;
      subTitle?: string | null;
      imageUrl?: string | null;
    };
    SliderResponseDTO: {
      id?: number;
      title?: string | null;
      subTitle?: string | null;
      imageUrl?: string | null;
    };
    SliderResponseDTOOperationResultDTO: {
      response?: components["schemas"]["SliderResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    UpdateSliderRequestDTO: {
      sliderId?: number;
      title?: string | null;
      subTitle?: string | null;
      imageUrl?: string | null;
    };
    GetSlidersRequestDTO: { [key: string]: any };
    SliderResponseDTOPagingOperationResultDTO: {
      totalCount?: number;
      pageIndex?: number;
      pageSize?: number;
      pageCount?: number;
      response?: components["schemas"]["SliderResponseDTO"][] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    SearchSlidersRequestDTO: {
      title?: string | null;
      pageIndex?: number;
      pageSize?: number;
      orderBy?: string | null;
      orderDir?: string | null;
    };
    FileRequestDTO: { files?: string | null };
    ResponseHeader: {
      isSuccess?: boolean;
      responseCode?: string | null;
      message?: string | null;
    };
    ResponseDataInfo: { totalCount?: number };
    FileResponseDTO: {
      header?: components["schemas"]["ResponseHeader"] | null;
      dataInfo?: components["schemas"]["ResponseDataInfo"] | null;
    };
    Int64OperationResultDTO: {
      response?: number;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    InsertOrderRequestDTO: { notes?: string | null; addressId?: number };
    InsertOrderResponseDTO: {
      id?: number;
      userId?: number;
      orderDate?: string;
      orderNumber?: string | null;
      deliveryType?: number;
      deliveryStartDate?: string;
      deliveryEndDate?: string;
      notes?: string | null;
      merchantBranchId?: number;
    };
    InsertOrderResponseDTOOperationResultDTO: {
      response?: components["schemas"]["InsertOrderResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    OrderProductItemListDTO: {
      productId?: number;
      productItemId?: number;
      productName?: string | null;
      sku?: string | null;
      price?: number;
      quantity?: number;
      unit?: number;
    };
    OrderResponseDTO: {
      id?: number;
      userId?: number;
      customer?: string | null;
      orderDate?: string;
      orderNumber?: string | null;
      deliveryType?: string | null;
      deliveryStartDate?: string;
      deliveryEndDate?: string;
      deliveryDate?: string | null;
      amount?: number;
      totalAmount?: number;
      shippingPrice?: number;
      notes?: string | null;
      merchantBranchId?: number;
      orderStatus?: string | null;
      statusDescription?: string | null;
      lastStatusBysUser?: string | null;
      carrierId?: number;
      products?: components["schemas"]["OrderProductItemListDTO"][] | null;
    };
    OrderResponseDTOOperationResultDTO: {
      response?: components["schemas"]["OrderResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetOrderListResponseDTO: {
      orders?: components["schemas"]["OrderResponseDTO"][] | null;
      totalCount?: number;
      currentPage?: number;
      pageCount?: number;
    };
    GetOrderListResponseDTOOperationResultDTO: {
      response?: components["schemas"]["GetOrderListResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    SearchOrderRequestDTO: {
      deliveryType?: number | null;
      orderDateStart?: string | null;
      orderDateEnd?: string | null;
      deliveryStartDate?: string | null;
      deliveryEndDate?: string | null;
      notes?: string | null;
      merchantId?: number | null;
      merchantBranchId?: number | null;
      isDeleted?: boolean;
      status?: string | null;
      modifierUserId?: number | null;
      userType?: string | null;
      searchValue?: string | null;
      pageIndex?: number;
      pageSize?: number;
      orderBy?: string | null;
      orderDir?: string | null;
    };
    OrderResponseDTOPagingOperationResultDTO: {
      totalCount?: number;
      pageIndex?: number;
      pageSize?: number;
      pageCount?: number;
      response?: components["schemas"]["OrderResponseDTO"][] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    UpdateOrderRequestDTO: {
      id?: number;
      deliveryType?: number | null;
      deliveryStartDate?: string | null;
      deliveryEndDate?: string | null;
      notes?: string | null;
      addressId?: number | null;
      isDeleted?: boolean | null;
      status?: string | null;
    };
    UpdateOrderStatusRequestDTO: {
      orderId?: number;
      notes?: string | null;
      orderStatus?: string | null;
    };
    UserActiveOrderDTO: {
      userId?: number;
      addressTitle?: string | null;
      addressDetail?: string | null;
      orderStatus?: string | null;
      orderId?: number;
      orderNumber?: string | null;
      userLong?: number;
      userLat?: number;
      carrierLong?: number;
      carrierLat?: number;
      totalAmount?: number;
      orderDate?: string;
      orderStatusTitle?: string | null;
      orderStatusDescription?: string | null;
      orderProducts?: string | null;
    };
    UserActiveOrderDTOOperationResultDTO: {
      response?: components["schemas"]["UserActiveOrderDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetCarrierOrderDTO: { orderStatus?: string | null };
    CarrierOrderListItem: {
      id?: number;
      userId?: number;
      customer?: string | null;
      orderDate?: string;
      orderNumber?: string | null;
      deliveryStartDate?: string;
      deliveryEndDate?: string;
      amount?: number;
      totalAmount?: number;
      shippingPrice?: number;
      notes?: string | null;
      orderStatus?: string | null;
      statusDescription?: string | null;
      userLong?: number;
      userLat?: number;
      address?: string | null;
      phoneNumber?: string | null;
      products?: components["schemas"]["OrderProductItemListDTO"][] | null;
    };
    CarrierOrderListItemOperationResultDTO: {
      response?: components["schemas"]["CarrierOrderListItem"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    OrderDir: "0" | "1";
    ProductItemListDTO: {
      productItemId?: number;
      productId?: number;
      name?: string | null;
      brand?: string | null;
      unit?: number;
      price?: number;
      sku?: string | null;
      imageUrl?: string | null;
    };
    SubCategoryWithProductsDTO: {
      id?: number;
      name?: string | null;
      products?: components["schemas"]["ProductItemListDTO"][] | null;
    };
    SubCategoryWithProductsDTOPagingOperationResultDTO: {
      totalCount?: number;
      pageIndex?: number;
      pageSize?: number;
      pageCount?: number;
      response?: components["schemas"]["SubCategoryWithProductsDTO"][] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    ProductItemListDTOPagingOperationResultDTO: {
      totalCount?: number;
      pageIndex?: number;
      pageSize?: number;
      pageCount?: number;
      response?: components["schemas"]["ProductItemListDTO"][] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    ProductFilterItemDTO: {
      productItemId?: number;
      productId?: number;
      name?: string | null;
      unit?: number;
      price?: number;
      sku?: string | null;
      stock?: number;
    };
    ProductFilterResponseDTO: {
      productId?: number;
      imageUrl?: string | null;
      productName?: string | null;
      categoryName?: string | null;
      stock?: number;
      price?: number;
      campain?: boolean;
      fastShipping?: boolean;
      sku?: string | null;
      productItems?: components["schemas"]["ProductFilterItemDTO"][] | null;
    };
    ProductFilterResponseDTOPagingOperationResultDTO: {
      totalCount?: number;
      pageIndex?: number;
      pageSize?: number;
      pageCount?: number;
      response?: components["schemas"]["ProductFilterResponseDTO"][] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    SearchProductsByLatLongRequestDTO: {
      productName?: string | null;
      latitude?: number;
      longitude?: number;
      pageIndex?: number;
      pageSize?: number;
      orderBy?: string | null;
      orderDir?: string | null;
    };
    SearchCategoryRequestDTO: {
      categoryName?: string | null;
      pageIndex?: number;
      pageSize?: number;
      orderBy?: string | null;
      orderDir?: string | null;
    };
    GetCategoryResponseDTO: {
      categoryName?: string | null;
      categoryDescription?: string | null;
      parentID?: number;
      categoryUrl?: string | null;
      icon?: string | null;
    };
    GetCategoryResponseDTOPagingOperationResultDTO: {
      totalCount?: number;
      pageIndex?: number;
      pageSize?: number;
      pageCount?: number;
      response?: components["schemas"]["GetCategoryResponseDTO"][] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetProductResponseDTO: {
      creatorUserId?: number;
      creationTime?: string;
      lastModTime?: string | null;
      modifierUserId?: number | null;
      isDeleted?: boolean;
      sku?: string | null;
      name?: string | null;
      description?: string | null;
      categoryId?: number;
      minQuantity?: number;
      unit?: number;
      merchantId?: number;
      defaultImageUrl?: string | null;
      brandId?: number;
      quantity?: number;
    };
    GetCategoryReponseItemDTO: {
      id?: number;
      name?: string | null;
      description?: string | null;
      parentId?: number;
      categoryUrl?: string | null;
      icon?: string | null;
      products?: components["schemas"]["GetProductResponseDTO"][] | null;
    };
    GetBaseCategoriesResponseDTO: {
      baseCategories?:
        | components["schemas"]["GetCategoryReponseItemDTO"][]
        | null;
    };
    GetBaseCategoriesResponseDTOOperationResultDTO: {
      response?: components["schemas"]["GetBaseCategoriesResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetSubCategoriesResponseDTO: {
      subCategories?:
        | components["schemas"]["GetCategoryReponseItemDTO"][]
        | null;
    };
    GetSubCategoriesResponseDTOOperationResultDTO: {
      response?: components["schemas"]["GetSubCategoriesResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
    GetProductRequestDTO: { id?: number };
    GetProductDetailResponseDTO: {
      itemId?: number;
      productId?: number;
      merchantBranchId?: number;
      sku?: string | null;
      name?: string | null;
      price?: number;
      description?: string | null;
      minQuantity?: number;
      unit?: number;
      defaultImageUrl?: string | null;
      brandId?: number;
      quantity?: number;
    };
    GetProductDetailResponseDTOOperationResultDTO: {
      response?: components["schemas"]["GetProductDetailResponseDTO"] | null;
      result?: boolean;
      messages?: components["schemas"]["OperationResultMessage"][] | null;
    };
  };
}
